server:
  port: ${PEER1_PORT:8761}

eureka:
  datacenter: ${DATA_CENTER:home}
  environment: ${Eu_ENVIRONMENT:test}
  client:
    registerWithEureka: false
    fetchRegistry: false
  server:
    waitTimeInMsWhenSyncEmpty: 0
    enableSelfPreservation: true
    
---
spring:
  profiles: peer1
eureka:
  instance:
    hostname: ${PEER1_HOSTNAME:peer1}
  client:
    serviceUrl:
      defaultZone: http://${PEER2_HOSTNAME:peer2}:${PEER2_PORT:8762},http://${PEER3_HOSTNAME:peer3}:${PEER3_PORT:8763}

---
spring:
  profiles: peer2
server:
  port: ${PEER2_PORT:8762}
eureka:
  instance:
    hostname: ${PEER2_HOSTNAME:peer2}
  client:
    serviceUrl:
      defaultZone: http://${PEER1_HOSTNAME:peer1}:${PEER1_PORT:8761},http://${PEER3_HOSTNAME:peer3}:${PEER3_PORT:8763}
      
---
spring:
  profiles: peer3
server:
  port: ${PEER3_PORT:8763}
eureka:
  instance:
    hostname: ${PEER3_HOSTNAME:peer3}
  client:
    serviceUrl:
      defaultZone: http://${PEER1_HOSTNAME:peer1}:${PEER1_PORT:8761},http://${PEER2_HOSTNAME:peer2}:${PEER2_PORT:8762}